cmake_minimum_required(VERSION 3.29.6.0)
cmake_policy(SET CMP0091 OLD)
cmake_policy(SET CMP0141 OLD)
cmake_policy(SET CMP0126 OLD)
cmake_policy(SET CMP0128 OLD)
project(CMAKE_TRY_COMPILE CXX)
set(CMAKE_VERBOSE_MAKEFILE 1)
set(CMAKE_CXX_FLAGS "/DWIN32 /D_WINDOWS /GR /EHsc")
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} ${COMPILE_DEFINITIONS}")
set(CMAKE_CXX_FLAGS_DEBUG "/MDd /Zi /Ob0 /Od /RTC1")
set(CMAKE_EXE_LINKER_FLAGS "/machine:x64")
set(CMAKE_EXE_LINKER_FLAGS "${CMAKE_EXE_LINKER_FLAGS} ${EXE_LINKER_FLAGS}")
include_directories(${INCLUDE_DIRECTORIES})
set(CMAKE_SUPPRESS_REGENERATION 1)
link_directories(${LINK_DIRECTORIES})
add_definitions([==[-DCOMPILER_SUPPORTS_FORMAT]==])
cmake_policy(SET CMP0065 NEW)
cmake_policy(SET CMP0083 NEW)
cmake_policy(SET CMP0155 OLD)
cmake_policy(SET CMP0157 OLD)
include("${CMAKE_ROOT}/Modules/Internal/HeaderpadWorkaround.cmake")
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY "D:/dyncall/cmake-build-debug/CMakeFiles/CMakeScratch/TryCompile-g52ma1")
add_executable(cmTC_e60cc)
target_sources(cmTC_e60cc PRIVATE
  "D:/dyncall/cmake-build-debug/CMakeFiles/CMakeScratch/TryCompile-g52ma1/src.cxx"
)
file(GENERATE OUTPUT "${CMAKE_BINARY_DIR}/cmTC_e60cc_loc"
     CONTENT $<TARGET_FILE:cmTC_e60cc>)
set_property(TARGET cmTC_e60cc PROPERTY "CXX_EXTENSIONS" "OFF")
set_property(TARGET cmTC_e60cc PROPERTY "CXX_STANDARD" "20")
set_property(TARGET cmTC_e60cc PROPERTY "CXX_STANDARD_REQUIRED" "ON")
target_link_libraries(cmTC_e60cc ${LINK_LIBRARIES})
